<UserControl
    x:Class="ImageManager.Views.MainPageView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Tools="clr-namespace:ImageManager.Tools"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dataModels="clr-namespace:ImageManager.Data.Model"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:viewModels="clr-namespace:ImageManager.ViewModels"
    d:DataContext="{d:DesignInstance Type=viewModels:MainPageViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <hc:ThemeResources />
                <hc:Theme />
                <ResourceDictionary>
                    <Tools:BindingProxy x:Key="Proxy" Data="{Binding}" />
                    <Style
                        x:Key="PictureCard"
                        BasedOn="{StaticResource CardBaseStyle}"
                        TargetType="hc:Card">
                        <Setter Property="Margin" Value="0,8" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Effect" Value="{StaticResource EffectShadow2}" />
                        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate DataType="viewModels:PictureSelectableItemWrapper">
                                    <!--  卡片主体部分  -->
                                    <hc:Badge
                                        ShowBadge="{Binding IsConflict}"
                                        Status="Text"
                                        Style="{StaticResource BadgeDanger}"
                                        Text="  ">
                                        <hc:SimplePanel>
                                            <Border CornerRadius="4,4,0,0">
                                                <Image
                                                    MouseLeftButtonDown="{s:Action OpenPicture}"
                                                    Source="{Binding Item.ImageSource, Mode=OneTime}"
                                                    Stretch="UniformToFill" />
                                            </Border>
                                            <CheckBox
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top"
                                                IsChecked="{Binding AcceptToAdd}"
                                                IsEnabled="{Binding IsEnabled}"
                                                Visibility="{Binding DataContext.IsAddPictureMode, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                                        </hc:SimplePanel>
                                    </hc:Badge>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FooterTemplate">
                            <Setter.Value>
                                <DataTemplate DataType="viewModels:PictureSelectableItemWrapper">
                                    <!--  Card 脚部  -->
                                    <StackPanel Margin="0,10,0,4" Visibility="{Binding Item.HasTitleOrLabel, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            Style="{StaticResource TextBlockTitleBold}"
                                            Text="{Binding Item.Title}"
                                            TextTrimming="CharacterEllipsis" />
                                        <hc:TagContainer
                                            Margin="5,5,5,0"
                                            BorderThickness="0"
                                            ItemsSource="{Binding Item.Labels}"
                                            Visibility="{Binding Item.Labels, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                            <hc:TagContainer.ItemTemplate>
                                                <DataTemplate DataType="dataModels:Label">
                                                    <Button
                                                        Margin="0"
                                                        Padding="0"
                                                        Background="Transparent"
                                                        BorderThickness="0"
                                                        Command="{s:Action PictureLabelClick}"
                                                        CommandParameter="{Binding}"
                                                        Content="{Binding Name}" />
                                                </DataTemplate>
                                            </hc:TagContainer.ItemTemplate>
                                            <hc:TagContainer.ItemContainerStyle>
                                                <Style BasedOn="{StaticResource TagBaseStyle}" TargetType="hc:Tag">
                                                    <Setter Property="Content" Value="{Binding}" />
                                                    <Setter Property="Margin" Value="5" />
                                                </Style>
                                            </hc:TagContainer.ItemContainerStyle>
                                        </hc:TagContainer>
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BorderBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style
                        x:Key="PictureListBox"
                        BasedOn="{StaticResource WrapPanelHorizontalListBox}"
                        TargetType="ListBox">
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="SelectionMode" Value="Extended" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <hc:WaterfallPanel
                                        Margin="0,8"
                                        hc:PanelElement.FluidMoveBehavior="{StaticResource BehaviorXY200}"
                                        AutoGroup="True"
                                        DesiredLength="{Binding DataContext.CardWidth, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemTemplate">
                            <Setter.Value>
                                <DataTemplate DataType="viewModels:PictureSelectableItemWrapper">
                                    <hc:Card
                                        Width="{Binding DataContext.CardWidth, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        Content="{Binding}"
                                        Footer="{Binding}"
                                        Style="{StaticResource PictureCard}">
                                        <hc:Card.ContextMenu>
                                            <ContextMenu ItemsSource="{Binding Source={StaticResource Proxy}, Path=Data.ContextMenuItems, Mode=OneTime}">
                                                <ContextMenu.ItemContainerStyle>
                                                    <Style TargetType="MenuItem">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="MenuItem">
                                                                    <hc:SimplePanel>
                                                                        <MenuItem
                                                                            Command="{Binding Command}"
                                                                            Header="{Binding Header}"
                                                                            InputGestureText="{Binding InputGestureText}"
                                                                            Visibility="{Binding IsSeparator, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />
                                                                        <Separator Visibility="{Binding IsSeparator, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                                                                    </hc:SimplePanel>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ContextMenu.ItemContainerStyle>
                                            </ContextMenu>
                                        </hc:Card.ContextMenu>
                                    </hc:Card>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style BasedOn="{StaticResource ListBoxItemCustom}" TargetType="ListBoxItem">
                                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected}" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Margin="8,0" Visibility="{Binding ShowFilterLabelPanel, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
            <hc:TagContainer
                Grid.Column="1"
                BorderThickness="0"
                ItemsSource="{Binding FilterLabels}">
                <hc:TagContainer.ItemContainerStyle>
                    <Style BasedOn="{StaticResource TagBaseStyle}" TargetType="hc:Tag">
                        <Setter Property="Content" Value="{Binding Name}" />
                        <Setter Property="Margin" Value="5" />
                        <Setter Property="IsSelected" Value="True" />
                    </Style>
                </hc:TagContainer.ItemContainerStyle>
            </hc:TagContainer>
        </Grid>
        <Canvas
            x:Name="MainCanva"
            Grid.Row="1"
            Margin="0,0,3,0"
            MouseLeftButtonDown="MainCanva_MouseButtonDown"
            SizeChanged="{s:Action SizeChanged}">
            <ListBox
                Width="{Binding ElementName=MainCanva, Path=ActualWidth}"
                Height="{Binding ElementName=MainCanva, Path=ActualHeight}"
                hc:Tag.Closing="{s:Action DeletePictureLabel}"
                ItemsSource="{Binding Pictures}"
                SelectionChanged="{s:Action PictureSelectionChange}"
                Style="{DynamicResource PictureListBox}"
                Visibility="{Binding IsGroup, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />
            <ScrollViewer
                Width="{Binding ElementName=MainCanva, Path=ActualWidth}"
                Height="{Binding ElementName=MainCanva, Path=ActualHeight}"
                Margin="0"
                HorizontalScrollBarVisibility="Auto"
                Visibility="{Binding IsGroup, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                <ItemsControl hc:Tag.Closing="{s:Action DeletePictureLabel}" ItemsSource="{Binding PictureGroups}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Expander
                                Width="{Binding ElementName=MainCanva, Path=ActualWidth}"
                                Background="{DynamicResource DefaultBrush}"
                                BorderThickness="1"
                                IsExpanded="True"
                                Style="{DynamicResource ExpanderBaseStyle}">
                                <Expander.Header>
                                    <TextBlock
                                        Margin="4,0,0,0"
                                        FontSize="{DynamicResource LargeFontSize}"
                                        Text="{Binding Key}" />
                                </Expander.Header>
                                <ListBox
                                    ItemsSource="{Binding}"
                                    PreviewMouseWheel="InnerLB_PreviewMouseWheel"
                                    SelectionChanged="{s:Action PictureSelectionChange}"
                                    Style="{DynamicResource PictureListBox}" />
                            </Expander>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
            <Canvas.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Command="{s:Action UpdateOrderBy}"
                        CommandParameter="AddTime"
                        Header="按添加时间排序">
                        <MenuItem.Icon>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="●"
                                Visibility="{Binding IsOrderByAddTime, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="{s:Action UpdateOrderBy}"
                        CommandParameter="Title"
                        Header="按标题排序">
                        <MenuItem.Icon>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="●"
                                Visibility="{Binding IsOrderByTitle, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="{s:Action UpdateOrderBy}"
                        CommandParameter="AddState"
                        Header="按添加状态排序"
                        Visibility="{Binding IsAddPictureMode, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                        <MenuItem.Icon>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="●"
                                Visibility="{Binding IsOrderByAddingState, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Command="{s:Action UpdateIsDesc}"
                        CommandParameter="False"
                        Header="顺序">
                        <MenuItem.Icon>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="●"
                                Visibility="{Binding IsDesc, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="{s:Action UpdateIsDesc}"
                        CommandParameter="True"
                        Header="逆序">
                        <MenuItem.Icon>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="●"
                                Visibility="{Binding IsDesc, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Command="{s:Action SetGroup}"
                        CommandParameter="False"
                        Header="不分组">
                        <MenuItem.Icon>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="●"
                                Visibility="{Binding IsGroup, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="{s:Action SetGroup}"
                        CommandParameter="True"
                        Header="分组">
                        <MenuItem.Icon>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="●"
                                Visibility="{Binding IsGroup, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Command="{s:Action UpdatePicture}" Header="刷新" />
                </ContextMenu>
            </Canvas.ContextMenu>
        </Canvas>
        <StackPanel Grid.Row="2" Background="{DynamicResource DefaultBrush}">
            <Grid Margin="2">
                <TextBlock
                    Margin="8,2"
                    HorizontalAlignment="Left"
                    Text="{Binding Message}" />
                <Slider
                    Width="120"
                    HorizontalAlignment="Right"
                    Maximum="{Binding MaxCardWidth, Mode=OneWay}"
                    Minimum="120"
                    Orientation="Horizontal"
                    Value="{Binding CardWidth}" />
            </Grid>
        </StackPanel>
    </Grid>

</UserControl>
